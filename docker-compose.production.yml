services:
  db:
    image: postgres:16
    container_name: postgres_container_prod
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
     - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5


  backend:
    build: .
    container_name: backend_prod
    restart: always  
    depends_on:
      db:
        condition: service_healthy   
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      DJANGO_SECRET_KEY: ${SECRET_KEY}
      DEBUG: "False" 
      ENVIRONMENT: production 

    volumes:
      - .:/app/backend
    ports:
    - "8001:8000"  
    env_file:
     - .env
    command: >
      sh -c " 
             python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn study_planner.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    container_name: frontend_prod  
    ports:
      - "5174:5173"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend

volumes:
  postgres_data_prod:
